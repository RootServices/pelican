buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'
sourceCompatibility = 1.8

version = '1.0-SNAPSHOT'
project.group = 'org.rootservices'

ext{
    kafkaVersion = '1.0.0'
    jacksonVersion = '2.8.8'
    junitVersion = '5.0.0'
}

repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    deployerJars
}

dependencies {
    compile "org.apache.kafka:kafka-clients:${kafkaVersion}"

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core',  version: '2.8.8'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind',  version: '2.8.8'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8',  version: '2.8.8'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310',  version: '2.8.8'

    compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.7'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    deployerJars "org.apache.maven.wagon:wagon-http:2.2"
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            if(!project.ext.properties.containsKey("ossrhUser")) {
                project.ext.ossrhUser = 'wrongUser'
                project.ext.ossrhPassword = 'wrongPassword'
            }

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: ossrhUser, password: ossrhPassword)
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUser, password: ossrhPassword)
            }
            pom.project {
                name project.name
                packaging 'jar'
                description 'framework to publish and consume messages'
                url 'https://github.com/RootServices/pelican'

                scm {
                    connection 'git@github.com:RootServices/pelican.git'
                    developerConnection 'git@github.com:RootServices/pelican.git'
                    url 'https://github.com/RootServices/pelican'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'https://github.com/RootServices/pelican/blob/development/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'tmackenzie'
                        name 'Tom MacKenzie'
                        email 'tom@rootservices.org'
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}
