buildscript {
    repositories {
        mavenCentral()
    }

}

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'
sourceCompatibility = 1.8
version = '1.0-SNAPSHOT'

ext{
    kafkaVersion = '0.11.0.1'
    jacksonVersion = '2.8.8'
    junitVersion = '5.0.0'
}

repositories {
    mavenCentral()
}

configurations {
    deployerJars
}

dependencies {
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '0.11.0.1'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core',  version: '2.8.8'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind',  version: '2.8.8'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8',  version: '2.8.8'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310',  version: '2.8.8'

    compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.7'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    deployerJars "org.apache.maven.wagon:wagon-http:2.2"
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            if(!ossrhUser) {
                ossrhUser = 'wrongUser'
                ossrhPassword = 'wrongPassword'
            }

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: ossrhUser, password: ossrhPassword)
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUser, password: ossrhPassword)
            }
            pom.project {
                groupId 'org.rootservices'
                artifactId project.name
                version project.version
                name project.name
                description project.description
                packaging 'jar'
                url 'https://github.com/RootServices/pelican'
            }
        }
    }
}

task getHomeDir {
    doLast {
        println gradle.gradleHomeDir
    }
}
